apply plugin: 'com.android.application'

def keys = rootProject.ext.keys
def build = rootProject.ext.build
def dependency = rootProject.ext.dependencies

android {
    compileSdkVersion build.compileSdkVersion
    buildToolsVersion build.buildToolsVersion

    defaultConfig {
        applicationId build.applicationId
        minSdkVersion build.minSdkVersion
        targetSdkVersion build.targetSDKVersion
        versionCode build.versionCode
        versionName build.versionName
        manifestPlaceholders = [
                WEIXIN_APP_ID: keys.WEIXIN_APP_ID_DEBUG,
                WEIBO_APP_KEY: keys.WEIBO_APP_KEY,
                UMENG_APP_KEY: keys.UMENG_APP_KEY,
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources true
            manifestPlaceholders = [
                    WEIXIN_APP_ID: keys.WEIXIN_APP_ID_RELEASE,
                    WEIBO_APP_KEY: keys.WEIBO_APP_KEY,
                    UMENG_APP_KEY: keys.UMENG_APP_KEY,
            ]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "sourcewall_${variant.buildType.name}_v${defaultConfig.versionName}_${defaultConfig.versionCode}";
                fileName += "_${variant.productFlavors[0].name}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    productFlavors {
        qihu360 {
            manifestPlaceholders = [CHANNEL_NAME: "360"]
        }
        baidu {
            manifestPlaceholders = [CHANNEL_NAME: "baidu"]
        }
        xiaomi {
            manifestPlaceholders = [CHANNEL_NAME: "xiaomi"]
        }
        meizu {
            manifestPlaceholders = [CHANNEL_NAME: "meizu"]
        }
        github {
            manifestPlaceholders = [CHANNEL_NAME: "github"]
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile dependency.SupportV4
    compile dependency.SupportAppcompat
    compile dependency.SupportDesign
    compile dependency.CardView
    compile dependency.EventBus
    compile dependency.GreenDAO
    compile dependency.Umeng
    compile dependency.OKHttp
    compile dependency.ButterKnife
    compile dependency.RxAndroid
    compile dependency.RxJava
    compile dependency.Jsoup
    compile dependency.Fab
    compile dependency.ScaleImage
    compile dependency.GifDrawable
    compile dependency.ImageLoader
    compile dependency.RxBinding
    compile dependency.RxBindingV4
    compile dependency.RxBindingV7
    compile dependency.Httpmime
    debugCompile dependency.LeakCanaryDebug
    releaseCompile dependency.LeakCanaryRelease
    testCompile dependency.LeakCanaryTest
}